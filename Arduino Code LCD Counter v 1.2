#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27,16,2);  // set the LCD address to 0x3F for a 16 chars and 2 line display


  float threshold = 0.50;
  int count = 0;           // Determines how many rubber bands were made
  //const int interval = 5;

  
void setup() {


  Serial.begin(9600);
  lcd.init();
  lcd.clear();         
  lcd.backlight();      // Make sure backlight is on
  
  
  // Print a message on both lines of the LCD.
  lcd.setCursor(4,0);   //Set cursor to character 2 on line 0
  lcd.print("Hello User");
  
  lcd.setCursor(4,1);   //Move cursor to character 2 on line 1
  lcd.print("Welcome to ");
  lcd.setCursor(4,2);
  lcd.print("Automatic Mode");


  delay(3000);
  lcd.noBacklight();
  delay(1000);
  lcd.clear();
  lcd.backlight();
  
  lcd.setCursor(4,2);
  lcd.print("Count: ");
}

float v1;
float v2;
boolean waitFor2ndTrigger;

void loop() {
  
  waitFor2ndTrigger = true;
  v1 = volts(A1);                                 // Measures voltage from the transistor connected to A1
  v2 = volts(A2);                                 // Measures voltage from the transistor connected to A2
  Serial.println("Waiting for trigger...");
  while (v1 > threshold) {
    delay(150);
    v1 = volts(A1);                               // Measures voltage from the transistor connected to A1
    v2 = volts(A2);                               // Measures voltage from the transistor connected to A2
  }
  Serial.print("Started...");

  while (v1 > threshold) {                        // While there is a rubber band in the way of the first phototransistor
    while(waitFor2ndTrigger){
    //delay(1500);
    v2 = volts(A2);                               // Measures voltage from the transistor connected to A2
    waitFor2ndTrigger = (v2 < threshold);         // Is "false" when phototransistor receives light again
    }
  }
  
  count = count+1;                                // Increase counter
  Serial.println("Stopped");
  lcd.setCursor(10, 2);
  lcd.print(count);                               // Display the counter
}

float volts(int adPin)
{
  return float(analogRead(adPin))*5/1024;
}
